if(!Array.prototype.indexOf){Array.prototype.indexOf=function(c){if(this==null){throw new TypeError()}var d=Object(this);var a=d.length>>>0;if(a===0){return -1}var e=0;if(arguments.length>0){e=Number(arguments[1]);if(e!=e){e=0}else{if(e!=0&&e!=Infinity&&e!=-Infinity){e=(e>0||-1)*Math.floor(Math.abs(e))}}}if(e>=a){return -1}var b=e>=0?e:Math.max(a-Math.abs(e),0);for(;b<a;b++){if(b in d&&d[b]===c){return b}}return -1}}(function(b){var a=function(f,c,h){var j=/^([a-zA-Z]+)(\.[a-zA-Z]*)*$/,g,e,d;if(f.match(j)===null||f==="window"){throw new Error("namespace: "+f+" is a malformed namespace string")}if(c!==undefined&&h===undefined){if(typeof(c)==="function"){h=c;c=undefined}else{if(typeof(c)==="object"){throw new Error("namespace: if second argument exists, final function argument must exist")}else{if(typeof(c)!=="object"){throw new Error("namespace: second argument must be an object of aliased local namespaces")}}}}else{if(typeof(c)!=="object"&&typeof(h)==="function"){throw new Error("namespace: second argument must be an object of aliased local namespaces")}}g=f.split(".");if(g[0]==="window"){e=window}else{e=(window[g[0]]===undefined)?window[g[0]]={}:window[g[0]]}if(h!==undefined&&typeof(h)!=="function"){throw new Error("namespace: last parameter must be a function that accepts a namespace parameter")}for(d=1;d<g.length;d=d+1){if(e[g[d]]===undefined){e[g[d]]={}}e=e[g[d]]}if(c===undefined&&h){h(e)}else{if(h){for(d in c){if(c.hasOwnProperty(d)){c[d]=a(c[d])}}h.call(c,e)}}return e};return a(b,function(c){c.namespace=a})}("window.jermaine.util"));window.jermaine.util.namespace("window.jermaine.util",function(a){var b=function(){var d=this,c={};this.on=function(e,f){if(typeof(e)!=="string"){throw new Error("EventEmitter: first argument to 'on' should be a string")}if(typeof(f)!=="function"){throw new Error("EventEmitter: second argument to 'on' should be a function")}if(!c[e]){c[e]=[]}c[e].push(f);return d};this.addListener=this.on;this.once=function(e,h){var g=function(){h(arguments);d.removeListener(e,g)};d.on(e,g);return d};this.removeListener=function(f,g){var e;if(typeof(f)!=="string"){throw new Error("EventEmitter: first parameter to removeListener method must be a string representing an event")}if(typeof(g)!=="function"){throw new Error("EventEmitter: second parameter must be a function to remove as an event listener")}if(c[f]===undefined||c[f].length===0){throw new Error("EventEmitter: there are no listeners registered for the '"+f+"' event")}e=c[f].indexOf(g);if(e!==-1){c[f].splice(e,1)}return d};this.removeAllListeners=function(e){if(typeof(e)!=="string"){throw new Error("EventEmitter: parameter to removeAllListeners should be a string representing an event")}if(c[e]!==undefined){c[e]=[]}return d};this.setMaxListeners=function(e){return d};this.listeners=function(e){if(typeof(e)!=="string"){throw new Error("EventEmitter: listeners method must be called with the name of an event")}else{if(c[e]===undefined){return[]}}return c[e]};this.emit=function(f,g){var e,h;if(arguments.length>1){h=[]}for(e=1;e<arguments.length;++e){h.push(arguments[e])}if(c[f]!==undefined){for(e=0;e<c[f].length;e=e+1){c[f][e].apply(this,h)}}};return d};a.EventEmitter=b});window.jermaine.util.namespace("window.jermaine",function(c){var d=this,b,a={};b=function(e){var f=function(h){var g,j={},i;g=e.call(j,h);if(!g){i=j.message||"validator failed with parameter "+h;throw new Error(i)}return g};return f};b.addValidator=function(f,e){if(f===undefined||typeof(f)!=="string"){throw new Error("addValidator requires a name to be specified as the first parameter")}if(e===undefined||typeof(e)!=="function"){throw new Error("addValidator requires a function as the second parameter")}if(a[f]===undefined){a[f]=function(g){return new b(function(j){var i={actual:j,param:j},h=e.call(i,g);this.message=i.message;return h})}}else{throw new Error("Validator '"+f+"' already defined")}};b.getValidator=function(f){var e;if(f===undefined){throw new Error("Validator: getValidator method requires a string parameter")}else{if(typeof(f)!=="string"){throw new Error("Validator: parameter to getValidator method must be a string")}}e=a[f];if(e===undefined){throw new Error("Validator: '"+f+"' does not exist")}return e};b.validators=function(){var f,e=[];for(f in a){if(a.hasOwnProperty(f)){e.push(f)}}return e};b.addValidator("isGreaterThan",function(e){this.message=this.param+" should be greater than "+e;return this.param>e});b.addValidator("isLessThan",function(e){this.message=this.param+" should be less than "+e;return this.param<e});b.addValidator("isA",function(f){var e=["string","number","boolean","function","object"];if(typeof(f)==="string"&&e.indexOf(f)>-1){this.message=this.param+" should be a "+f;return typeof(this.param)===f}else{if(f==="integer"){if(this.param.toString!==undefined){this.message=this.param.toString()+" should be an integer"}else{this.message="parameter should be an integer"}return(typeof(this.param)==="number")&&(parseInt(this.param,10)===this.param)}else{if(typeof(f)==="string"){throw new Error("Validator: isA accepts a string which is one of "+e)}else{throw new Error("Validator: isA only accepts a string for a primitive types for the time being")}}}});a.isAn=a.isA;b.addValidator("isOneOf",function(e){this.message=this.param+" should be one of the set: "+e;return e.indexOf(this.param)>-1});c.Validator=b});
/*!
 *
 * Notes and ToDos:
 * + what about isNotGreaterThan()?, isNotLessThan()?  Or, better still: a
 *   general 'not' operator, as in jasmine?
 *
 * + Attr should be decoupled from AttrList, see the clone() method
 *
 * + See issue 24 on github
 */
window.jermaine.util.namespace("window.jermaine",function(a){var b=function(f){var h=[],l=this,m="invalid setter call for "+f,j,k,e,c,o=false,d,n={},p=window.jermaine.AttrList,g=window.jermaine.Validator;if(f===undefined||typeof(f)!=="string"){throw new Error("Attr: constructor requires a name parameter which must be a string")}d=function(i){for(k=0;k<h.length;++k){h[k](i)}return true};this.validatesWith=function(i){if(typeof(i)==="function"){h.push(new g(i));return this}else{throw new Error("Attr: validator must be a function")}};this.defaultsTo=function(i){j=i;return this};this.isReadOnly=function(){o=true;return this};this.isWritable=function(){o=false;return this};this.on=function(i,q){if(i!=="set"&&i!=="get"){throw new Error("Attr: first argument to the 'on' method should be 'set' or 'get'")}else{if(typeof(q)!=="function"){throw new Error("Attr: second argument to the 'on' method should be a function")}else{n[i]=q}}};this.name=function(){return f};this.validator=function(){return d};this.and=this;this.which=this;this.isImmutable=this.isReadOnly;this.isMutable=this.isWritable;this.clone=function(){var q,r;q=this instanceof p?new p(f):new b(f);for(r=0;r<h.length;++r){q.validatesWith(h[r])}q.defaultsTo(j);if(o){q.isImmutable()}return q};this.addTo=function(s){var q,r,i;if(!s||typeof(s)!=="object"){throw new Error("Attr: addAttr method requires an object parameter")}s[f]=function(u){var t;if(u!==undefined){if(o&&q!==undefined){throw new Error("cannot set the immutable property "+f+" after it has been set")}else{if(!d(u)){throw new Error(m)}else{t=q;q=u;if(n.set!==undefined){n.set.call(s,u,t)}}}return s}else{if(n.get!==undefined){n.get.call(s,q)}return q}};i=typeof(j)==="function"?j():j;if(i!==undefined&&d(i)){s[f](i)}else{if(i!==undefined&&!d(i)){throw new Error("Attr: Default value of "+i+" does not pass validation for "+f)}}};c=function(i){l[i]=function(q){h.push(g.getValidator(i)(q));return l}};for(k=0;k<g.validators().length;++k){c(g.validators()[k])}};a.Attr=b});window.jermaine.util.namespace("window.jermaine",function(a){function b(c){var e=this;a.Attr.call(this,c);var d=function(g,f){return function(){return g[f].apply(g,arguments)}};this.validateWith=this.validatesWith;this.defaultsTo=function(){};this.isImmutable=function(){};this.isMutable=function(){};this.eachOfWhich=this;this.addTo=function(h){var i,f=[],g={};if(!h||typeof(h)!=="object"){throw new Error("AttrList: addTo method requires an object parameter")}else{g.pop=d(f,"pop");g.add=function(j){if((e.validator())(j)){f.push(j);return this}else{throw new Error(e.errorMessage())}};g.replace=function(j,k){if((typeof(j)!=="number")||(parseInt(j,10)!==j)){throw new Error("AttrList: replace method requires index parameter to be an integer")}if(j<0||j>=this.size()){throw new Error("AttrList: replace method index parameter out of bounds")}if(!(e.validator())(k)){throw new Error(e.errorMessage())}f[j]=k;return this};g.at=function(j){if(j<0||j>=this.size()){throw new Error("AttrList: Index out of bounds")}return f[j]};g.get=g.at;g.size=function(){return f.length};g.toJSON=function(m){var k=[],n,l;if(m!==undefined){for(n=0;n<m.length;++n){if(m[n].object===this){k=m[n].JSONrep}}}for(n=0;n<f.length;++n){if(f[n].toJSON){k.push(f[n].toJSON(m))}else{k.push(f[n])}}return k};h[c]=function(){return g}}}}b.prototype=new window.jermaine.Attr(name);a.AttrList=b});window.jermaine.util.namespace("window.jermaine",function(a){var b=function(c,d){if(!c||typeof(c)!=="string"){throw new Error("Method: constructor requires a name parameter which must be a string")}else{if(!d||typeof(d)!=="function"){throw new Error("Method: second parameter must be a function")}}this.addTo=function(e){if(!e||typeof(e)!=="object"){throw new Error("Method: addTo method requires an object parameter")}e[c]=d}};a.Method=b});window.jermaine.util.namespace("window.jermaine",function(a){var c=function(d){};var b=function(w){var j=this,s={},k={},r,g=true,e=[],p=[],t=[],d=a.Method,v=a.Attr,n=a.AttrList,i=a.util.EventEmitter,h,x,m,l,u=function(){},q=function(){},f=function(){if(g){f.validate();m()}return q.apply(this,arguments)};if(arguments.length>1){w=arguments[arguments.length-1]}if(w&&typeof(w)==="function"){f=new b();w.call(f);return f}else{if(w){throw new Error("Model: specification parameter must be a function")}}var o=function(A,z){var C,y,B;C=A==="Attr"?v:n;y=A==="Attr"?"hasA":"hasMany";g=true;if(typeof(z)==="string"){B=new C(z);k[z]=B;return B}else{throw new Error("Model: "+y+" parameter must be a string")}};h=function(A,z){var y;if(typeof(z)!=="string"){throw new Error("Model: expected string argument to "+A+" method, but recieved "+z)}y=A==="attribute"?k[z]:s[z];if(y===undefined){throw new Error("Model: "+A+" "+z+" does not exist!")}return y};x=function(A){var z,B=[],y=A==="attributes"?k:s;for(z in y){if(y.hasOwnProperty(z)){B.push(z)}}return B};m=function(z){var A,y,B;q=function(){var G,D,E=f.attributes(),F=f.methods(),C=new i(),J,K={},I,H,L;if(!(this instanceof f)){throw new Error("Model: instances must be created using the new operator")}this.emitter=function(){return C};this.on=this.emitter().on;this.emit=this.emitter().emit;this.toJSON=function(N){var Q,O,M,P={},R;if(N===undefined){N=[];N.push({object:this,JSONrep:P})}else{if(typeof(N)!=="object"){throw new Error("Instance: toJSON should not take a parameter (unless called recursively)")}else{for(O=0;O<N.length;++O){if(N[O].object===this){P=N[O].JSONrep}}}}for(O=0;O<E.length;++O){R=null;Q=this[E[O]]();for(M=0;M<N.length;++M){if(N[M].object===Q){R=N[M].JSONrep}}if(Q!==undefined&&Q!==null&&Q.toJSON!==undefined&&R===null){R=(k[E[O]] instanceof n)?[]:{};N.push({object:Q,JSONrep:R});N[N.length-1].JSONrep=Q.toJSON(N)}if(R===null){P[E[O]]=Q}else{P[E[O]]=R}}return P};this.toString=(r!==undefined)?r:function(){return"Jermaine Model Instance"};I=function(M){M.on("set",function(P,O){var N=this;if(K[M.name()]===undefined){K[M.name()]=function(S){var R=[],Q=true;for(G=0;G<S.length&&Q===true;++G){R.push(S[G]);if(S[G].origin===this){Q=false}}if(Q){R.push({key:M.name(),origin:this});this.emit("change",R)}}}if(H!==undefined){if(O!==undefined&&O!==null&&O.emitter!==undefined){O.emitter().removeListener("change",H);H=undefined}}if(P!==null&&typeof(P)==="object"&&P.on!==undefined&&P.emitter!==undefined){if(O!==undefined&&O!==null&&H!==undefined){O.emitter().removeListener("change",H)}H=function(Q){K[M.name()].call(N,Q)};P.emitter().on("change",H)}this.emit("change",[{key:M.name(),value:P,origin:this}])})};for(G=0;G<E.length;++G){J=f.attribute(E[G]);if(J instanceof v){I.call(this,J)}}for(G=0;G<E.length+F.length;++G){if(G<E.length){if(l){k[E[G]].isImmutable()}k[E[G]].addTo(this)}else{s[F[G-E.length]].addTo(this)}}if(arguments.length>0){if(arguments.length<e.length){B="Constructor requires ";for(G=0;G<e.length;++G){B+=e[G];B+=G===e.length-1?"":", "}B+=" to be specified";throw new Error(B)}if(arguments.length>e.length+p.length){throw new Error("Too many arguments to constructor. Expected "+e.length+" required arguments and "+p.length+" optional arguments")}else{for(G=0;G<arguments.length;++G){D=G<e.length?e[G]:p[G-e.length];if(f.attribute(D) instanceof n){if(Object.prototype.toString.call(arguments[G])!=="[object Array]"){throw new Error("Model: Constructor requires 'names' attribute to be set with an Array")}else{for(y=0;y<arguments[G].length;++y){this[D]().add(arguments[G][y])}}}else{this[D](arguments[G])}}}}u.call(this)};return q};f.hasA=function(y){return o("Attr",y)};f.hasAn=f.hasA;f.hasSome=f.hasA;f.hasMany=function(y){return o("AttrList",y)};f.isA=function(A){var z,y,C,B;g=true;B=function(E){var D,F=new b();for(D in F){if(F.hasOwnProperty(D)&&typeof(E[D])!==typeof(F[D])){return false}}return true};if(typeof(A)!=="function"||!B(A)){throw new Error("Model: parameter sent to isA function must be a Model")}if(t.length===0){t.push(A)}else{throw new Error("Model: Model only supports single inheritance at this time")}y=t[0].attributes();for(z=0;z<y.length;++z){if(k[y[z]]===undefined){k[y[z]]=t[0].attribute(y[z]).clone();k[y[z]].isMutable()}}C=t[0].methods();for(z=0;z<C.length;++z){if(s[C[z]]===undefined){s[C[z]]=t[0].method(C[z])}}for(z=0;z<t.length;z++){f.prototype=new t[z]()}};f.isAn=f.isA;f.parent=function(){return t[0].apply(this,arguments)};f.attribute=function(y){return h("attribute",y)};f.attributes=function(){return x("attributes")};f.method=function(y){return h("method",y)};f.methods=function(){return x("methods")};f.isBuiltWith=function(){var y=false,z;g=true;e=[];p=[];for(z=0;z<arguments.length;++z){if(typeof(arguments[z])==="string"&&arguments[z].charAt(0)!=="%"){if(y){throw new Error("Model: isBuiltWith requires parameters preceded with a % to be the final parameters before the optional function")}else{e.push(arguments[z])}}else{if(typeof(arguments[z])==="string"&&arguments[z].charAt(0)==="%"){y=true;p.push(arguments[z].slice(1))}else{if(typeof(arguments[z])==="function"&&z===arguments.length-1){u=arguments[z]}else{throw new Error("Model: isBuiltWith parameters must be strings except for a function as the optional final parameter")}}}}};f.isImmutable=function(){l=true};f.looksLike=function(y){g=true;r=y};f.respondsTo=function(z,A){var y=new d(z,A);g=true;s[z]=y};f.validate=function(){var A,z=this.attributes(),y=this.methods();for(A=0;A<e.length;++A){try{this.attribute(e[A])}catch(B){throw new Error(e[A]+", specified in the isBuiltWith method, is not an attribute")}}for(A=0;A<p.length;++A){try{this.attribute(p[A])}catch(B){throw new Error(p[A]+", specified in the isBuiltWith method, is not an attribute")}}for(A=0;A<z.length;A++){if(y.indexOf(z[A])>-1){throw new Error("Model: invalid model specification to "+z[A]+" being both an attribute and method")}}if(l){for(A=0;A<z.length;A++){if(e.indexOf(z[A])<0){throw new Error("immutable objects must have all attributes required in a call to isBuiltWith")}}}g=false};return f};a.Model=b});